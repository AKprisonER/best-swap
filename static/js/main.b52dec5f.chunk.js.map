{"version":3,"sources":["Componenets/Exchanges/common.js","Componenets/Exchanges/Changelly/index.js","Componenets/Exchanges/CoinSwitch/api.js","Componenets/Exchanges/CoinSwitch/index.js","Componenets/Exchanges/aggregator.js","Componenets/LastExchangeBox.js","Componenets/ExchangeModal.js","Componenets/Main.js","App.js","serviceWorker.js","index.js","aragonui-logo.png","changelly-logo.png"],"names":["amountCheck","fix","amount","limit","error","fixError","minAmountFixed","Error","maxAmountFixed","floatError","minAmountFloat","maxAmountFloat","changelly","Changelly","process","getExchangeAmount","from","to","a","async","result","Number","id","exchange","getFixRateForAmount","amountFrom","amountTo","toString","getMinMaxForPair","getPairsParams","pairParams","MAX_VALUE","getCurrenciesSymbolAndLabel","getCurrenciesFull","coins","filter","coin","enabled","map","symbol","name","label","fullName","createTransaction","rateId","address","extraId","refundAddress","refundExtraId","createFixTransaction","tx","currencyFrom","currencyTo","amountExpectedFrom","amountExpectedTo","payoutAddress","payinAddress","payinExtraId","expiration","payTill","getTransactionStatus","getStatus","URI","URI_PREFIX","console","log","API_KEY","getRates","depositCoin","destinationCoin","params","requestCoinSwitch","rate","getFixedPairs","pairs","pair","isActive","length","getFixedRates","depositCoinAmount","destinationCoinAmount","offer","createOrder","tag","refundAddr","refundTag","destinationAddress","order","createFixOrder","offerReferenceId","getOrderStatus","endpoint","method","url","options","headers","body","JSON","stringify","fetch","response","status","json","resJson","success","data","msg","text","CoinSwitchAPI","destinationAmount","minerFee","Promise","all","floatResult","fixResult","limitMinDepositCoin","limitMaxDepositCoin","expectedDepositCoinAmount","expectedDestinationCoinAmount","orderId","exchangeAddress","getBestOffer","limits","CoinSwitch","offers","bestOfferIndex","bestOffer","i","getLimitsForPair","validFloatLimits","validFixedLimits","Math","min","LastExchange","transaction","useState","setStatus","header","title","shortenAddress","onClick","Aggregator","icon","ExchangeModal","fixed","fixRateId","exchangeName","updateTransaction","opened","setOpened","errorMessage","setErrorMessage","errorOpened","setErrorOpened","message","mode","closeButton","width","padding","visible","onClose","style","alignItems","fontSize","paddingLeft","toUpperCase","entity","display","alignContent","getAggregateBestOffer","_from","_to","_amount","_fix","useSearchExchangeAmount","setFrom","setTo","setAmount","setUseFix","selectedOfferIndex","setOfferIndex","setOffers","setLimits","debouncedGetOffersOnce","useConstant","AwesomeDebouncePromise","debouncedGetOffers","useAsync","Main","currencies","updateCurrencies","setAddress","setRefundAddress","fresh","setFresh","setMinAmountFloat","setMinAmountFixed","searchTerm","setSearchTerm","toSearchTerm","setToSearchTerm","selectedFrom","setSelectedFrom","selectedTo","setSelectedTo","updateLimitAmounts","then","_currencies","primary","paddingBottom","paddingRight","textAlign","color","required","type","value","onChange","event","target","handleAmountChange","wide","secondary","items","toLowerCase","indexOf","onSelect","fromObj","find","renderSelected","x","selected","onSelectedClick","placeholder","justifyContent","loading","index","description","toObj","LastExchangeBox","App","sidePanelOpened","setSidePanelOpened","src","AragonUILogog","alt","ChangellyLogo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b52dec5f.chunk.js","sourcesContent":["export const amountCheck = (fix, amount, limit) => {\n  if (!limit) return\n  if (limit.error) throw limit.error;\n  if (fix) {\n    if (limit.fixError) throw limit.fixError\n    if (amount < limit.minAmountFixed) throw Error(`Min Amount: ${limit.minAmountFixed}`)\n    else if (amount > limit.maxAmountFixed) throw Error(`Max Amount: ${limit.maxAmountFixed}`)\n  } else {\n    if (limit.floatError) throw limit.floatError\n    if (amount < limit.minAmountFloat) throw Error(`Min Amount: ${limit.minAmountFloat}`)\n    else if (amount > limit.maxAmountFloat) throw Error(`Max Amount ${limit.maxAmountFloat}`)\n  }\n}\n","import { Changelly } from 'changelly-js'\nimport { amountCheck } from '../common'\n\nconst apiKey = process.env.REACT_APP_APIKey\nconst apiSecret = process.env.REACT_APP_APISecret\nconst changelly = new Changelly(apiKey, apiSecret)\n\nconst exchange = 'Changelly'\n\nexport const getExchangeAmount = async (from, to, amount, fix, limit) => {\n  try {\n    amountCheck(fix, amount, limit)\n    if (!fix) {\n      const result = await changelly.getExchangeAmount([{ from, to, amount }])\n      return {\n        amount: Number(result[0].result),\n        id: '',\n        exchange,\n      }\n    } else {\n      const result = await changelly.getFixRateForAmount([{ from, to, amountFrom: amount }])\n      return {\n        amount: Number(result[0].amountTo),\n        id: result[0].id,\n        exchange,\n      }\n    }\n  } catch (error) {\n    return { amount: 0, exchange, error: error.toString() }\n  }\n}\n\nexport const getMinMaxForPair = async (from, to) => {\n  try {\n    const pairParams = await changelly.getPairsParams([{ from, to }])\n    const { minAmountFloat, minAmountFixed, maxAmountFloat, maxAmountFixed } = pairParams[0]\n    return {\n      minAmountFloat: Number(minAmountFloat),\n      minAmountFixed: Number(minAmountFixed),\n      maxAmountFloat: maxAmountFloat === null ? Number.MAX_VALUE : Number(maxAmountFloat),\n      maxAmountFixed: maxAmountFixed === null ? Number.MAX_VALUE : Number(maxAmountFixed),\n      exchange,\n    }\n  } catch (error) {\n    return { exchange, error }\n  }\n\n}\n\nexport const getCurrenciesSymbolAndLabel = async () => {\n  const coins = await changelly.getCurrenciesFull()\n  return coins\n    .filter(coin => coin.enabled)\n    .map(coin => {\n      return {\n        symbol: coin.name,\n        label: `${coin.fullName} (${coin.name})`,\n      }\n    })\n}\n\nexport const createTransaction = async (\n  fix,\n  rateId,\n  from,\n  to,\n  amount,\n  address,\n  extraId = null,\n  refundAddress = null,\n  refundExtraId = null\n) => {\n  if (fix) {\n    const tx = await changelly.createFixTransaction(\n      from,\n      to,\n      address,\n      rateId,\n      refundAddress,\n      amount,\n      null,\n      extraId,\n      refundExtraId\n    )\n    return {\n      from: tx.currencyFrom,\n      to: tx.currencyTo,\n      amountFrom: tx.amountExpectedFrom,\n      amountTo: tx.amountExpectedTo,\n      id: tx.id,\n      payoutAddress: tx.payoutAddress,\n      payinAddress: tx.payinAddress,\n      payinExtraId: tx.payinExtraId,\n      expiration: tx.payTill,\n      exchange,\n    }\n  } else {\n    const tx = await changelly.createTransaction(from, to, address, amount, extraId, refundAddress, refundExtraId)\n    // const tx = {\n    //   currencyFrom: from,\n    //   currencyTo: to,\n    //   amountExpectedFrom: amount,\n    //   amountExpectedTo: '150.2314098712',\n    //   id: '123412341234',\n    //   payinAddress: 'bc1qwqdg6squsna38e46795at95yu9atm8azzmyvckulcc7kytlcckxswvvzej',\n    //   payoutAddress: address,\n    //   refundAddress: refundAddress,\n    //   payinExtraId: null,\n    // }\n    return {\n      from: tx.currencyFrom,\n      to: tx.currencyTo,\n      amountFrom: tx.amountExpectedFrom,\n      amountTo: tx.amountExpectedTo,\n      id: tx.id,\n      payoutAddress: tx.payoutAddress,\n      payinAddress: tx.payinAddress,\n      payinExtraId: tx.payinExtraId,\n      exchange,\n    }\n  }\n}\n\nexport const getTransactionStatus = async id => {\n  return await changelly.getStatus(id)\n}\n","const URI_PREFIX = process.env.REACT_APP_CORS_PREFIX || ''\nconst URI = URI_PREFIX + 'https://api.coinswitch.co/v2/'\nconsole.log(`CoinSwitch: ${URI}`)\nconst API_KEY = process.env.REACT_APP_COINSWITCH_KEY\n// const API_KEY = 'cRbHFJTlL6aSfZ0K2q7nj6MgV5Ih4hbA2fUG0ueO' // sandbox \nif (!API_KEY) throw Error('Missing CoinSwitch APIKey')\n\n/**\n * @returns {Promise<Array<{name: string, symbol: string, parentCode:string | null}>>}\n */\nexport const getCoins = async () => {\n  const coins = await requestCoinSwitch('coins', 'GET')\n  const target = coins\n    .filter(coin => {\n      return coin.isActive && !coin.isFiat\n    })\n    .map(coin => {\n      return {\n        name: coin.name,\n        symbol: coin.symbol,\n        parentCode: coin.parentCode,\n      }\n    })\n  return target\n}\n\n/**\n *\n * @param {string | null} depositCoin\n * @param {string |null} destinationCoin\n * @returns {Promise<Array<{depositCoin: string, destinationCoin:string, isActive:boolean}>>}\n */\nexport const getPairs = async (depositCoin = null, destinationCoin = null) => {\n  if (!depositCoin && !destinationCoin) throw new Error('One of depositCoin or destinationCoin need to be specified')\n  let params = {}\n  if (depositCoin) params.depositCoin = depositCoin\n  if (destinationCoin) params.destinationCoin = destinationCoin\n\n  const pairs = await requestCoinSwitch('pairs', 'POST', params)\n  return pairs\n    .filter(pair => pair.isActive)\n    .map(pair => {\n      return {\n        depositCoin: pair.depositCoin,\n        destinationCoin: pair.destinationCoin,\n      }\n    })\n}\n\n/**\n *\n * @param {string} depositCoin\n * @param {string} destinationCoin\n * @returns {Promise<{ rate:number minerFee:number, limitMinDepositCoin:number, limitMaxDepositCoin:number,\n * limitMinDestinationCoin:number, limitMaxDestinationCoin:number }>}\n */\nexport const getRates = async (depositCoin, destinationCoin) => {\n  const params = { depositCoin, destinationCoin }\n  const rate = await requestCoinSwitch('rate', 'POST', params)\n  return rate\n}\n\n/**\n *\n * @param {*} depositCoin\n * @param {*} destinationCoin\n * @returns {Promise<Array<{depositCoin: string, destinationCoin: string, isActive: boolean, limitMinDepositCoin: number,\n * limitMaxDepositCoin: number, limitMinDestinationCoin: number, limitMaxDestinationCoin: number}>>}\n */\nexport const getFixedPairs = async (depositCoin = null, destinationCoin = null) => {\n  if (!depositCoin && !destinationCoin) throw new Error('One of depositCoin or destinationCoin need to be specified')\n  let params = {}\n  if (depositCoin) params.depositCoin = depositCoin\n  if (destinationCoin) params.destinationCoin = destinationCoin\n\n  const pairs = await requestCoinSwitch('fixed/pairs', 'POST', params)\n  const result = pairs.filter(pair => pair.isActive)\n  if(result.length ===0) return [ { error: 'Fix rate trading of this pair not supported' } ]\n  return result\n}\n\n/**\n *\n * @param {{ depositCoin:string, destinationCoin:string, depositCoinAmount?:number, destinationCoinAmount?:number }} data\n * @return {Promise<{depositCoin: string, destinationCoin:string, depositCoinAmount: string, destinationCoinAmount: string, offerReferenceId:string, offerExpirationTime:number}>}\n */\nexport const getFixedRates = async params => {\n  const { depositCoinAmount, destinationCoinAmount } = params\n  if ((!depositCoinAmount && !destinationCoinAmount) || (depositCoinAmount && destinationCoinAmount))\n    throw new Error('Only specify one of depositCoinAmount or destinationCoinAmount')\n  const offer = await requestCoinSwitch('fixed/offer', 'POST', params)\n  return offer\n}\n\n/**\n * Get rate for all pairs\n * @dev Will not return invalid pair, we can use this to filter unsupported coins\n * @param {Array<{depositCoin:string, destinationCoin:string}>} pairs\n * @returns {Promise<Array<{depositCoin: string, destinationCoin: string, rate: number, minerFee: number,\n            limitMinDepositCoin: number, limitMaxDepositCoin: number,\n            limitMinDestinationCoin: number, limitMaxDestinationCoin: number}>>}\n */\nexport const getBulkRate = async pairs => {\n  return requestCoinSwitch('bulk-rate', 'POST', pairs)\n}\n\n\n/**\n * Float rate order\n * @param {string} depositCoin \n * @param {string} destinationCoin \n * @param {number} depositCoinAmount \n * @param {string} address \n * @param {string} tag \n * @param {string} refundAddr\n * @param {string} refundTag \n */\nexport const createOrder = async(depositCoin, destinationCoin, depositCoinAmount, address, tag, refundAddr, refundTag) => {\n  if (!tag) tag = null\n  if (!refundTag) refundTag =null\n  const destinationAddress = { address, tag }\n  const refundAddress = { address: refundAddr, tag: refundTag }\n  const params = { depositCoin, destinationCoin, depositCoinAmount, destinationAddress, refundAddress }\n  const order = await requestCoinSwitch('order', 'POST', params)\n  return order\n}\n\n/**\n * Fix Rate Order\n * @param {string} offerReferenceId \n * @param {string} depositCoin \n * @param {string} destinationCoin \n * @param {number} depositCoinAmount \n * @param {string} address \n * @param {string} tag \n * @param {string} refundAddr \n * @param {string} refundTag \n */\nexport const createFixOrder = async(offerReferenceId, depositCoin, destinationCoin, depositCoinAmount, address, tag, refundAddr, refundTag) => {\n  if (!tag) tag = null\n  if (!refundTag) refundTag =null\n  const destinationAddress = { address, tag }\n  const refundAddress = { address: refundAddr, tag: refundTag }\n  const params = { offerReferenceId, depositCoin, destinationCoin, depositCoinAmount, destinationAddress, refundAddress }\n  const order = await requestCoinSwitch('fixed/order', 'POST', params)\n  console.log(order)\n  return order\n}\n\n\nexport const getOrderStatus = async id => {\n  const endpoint = `/order/${id}`\n  return await requestCoinSwitch(endpoint, 'GET')\n}\n\nconst requestCoinSwitch = async (endpoint, method, params) => {\n  const url = URI + endpoint\n  let options = {\n    method,\n    headers: {\n      'x-api-key': API_KEY,\n      'x-user-ip': '220.132.76.232',\n      'content-type': 'application/json',\n    },\n  }\n  if (method === 'POST') options.body = JSON.stringify(params)\n\n  const response = await fetch(url, options)\n  if (response.status === 200) {\n    const resJson = await response.json()\n    if (resJson.success) return resJson.data\n    throw resJson.msg\n  } else {\n    throw await response.text()\n  }\n}\n","import * as CoinSwitchAPI from './api'\nimport { amountCheck } from '../common'\n\nconst exchange = 'CoinSwitch'\n\n/**\n * \n * @param {string} from \n * @param {string} to \n * @param {number} amount \n * @param {boolean} fix \n * @param {{}} limit\n * @returns {Promise<{amount:number, id:string, exchange: string}>}\n */\nexport const getExchangeAmount = async (from, to, amount, fix, limit) => {\n  try{\n    amountCheck(fix, amount, limit)\n    if(fix) {\n      const offer = await CoinSwitchAPI.getFixedRates({ depositCoin:from, destinationCoin:to, depositCoinAmount: amount })\n      const id = offer.offerReferenceId;\n      const destinationAmount = Number(offer.destinationCoinAmount)\n      return { amount: destinationAmount, id, exchange }\n    } else {\n      const { rate, minerFee } = await CoinSwitchAPI.getRates(from, to)\n      const destinationAmount = amount * rate - minerFee\n      return { amount: destinationAmount, id: '', exchange }\n    }\n  } catch (error) {\n    return { amount: 0, exchange, error: error.toString() }\n  }\n}\n\nexport const getMinMaxForPair = async (from, to) => {\n  try {\n    const [floatResult, fixResult] = await Promise.all([\n      CoinSwitchAPI.getRates(from, to),\n      CoinSwitchAPI.getFixedPairs(from, to)\n    ]) \n    const { limitMinDepositCoin: minAmountFloat, limitMaxDepositCoin: maxAmountFloat } = floatResult\n    \n    /** In CoinSwitch, it's possible that fix rate not supported but float rate supported */\n    if (!fixResult[0].error) {\n      const { limitMinDepositCoin: minAmountFixed, limitMaxDepositCoin: maxAmountFixed } = fixResult[0]\n      return { minAmountFloat, maxAmountFloat, minAmountFixed, maxAmountFixed, exchange }\n    } else {\n      return { minAmountFloat, maxAmountFloat, fixError: fixResult[0].error }\n    }\n  } catch (error) {\n    return { error, exchange }\n  }\n}\n\nexport const createOrder = async (\n  fix,\n  rateId,\n  from,\n  to,\n  amount,\n  address,\n  extraId = null,\n  refundAddress = null,\n  refundExtraId = null\n) => {\n  if (fix) {\n    const tx = await CoinSwitchAPI.createFixOrder( rateId, from, to, amount, address, extraId, refundAddress, refundExtraId )\n    return {\n      from,\n      to,\n      payoutAddress: address,\n      amountFrom: tx.expectedDepositCoinAmount,\n      amountTo: tx.expectedDestinationCoinAmount,\n      id: tx.orderId,\n      payinAddress: tx.exchangeAddress.address,\n      payinExtraId: tx.exchangeAddress.tag,\n      exchange,\n    }\n  } else {\n    const tx = await CoinSwitchAPI.createOrder(from, to,  amount, address, extraId, refundAddress, refundExtraId)\n    \n    return {\n      from,\n      to,\n      payoutAddress: address,\n      amountFrom: tx.expectedDepositCoinAmount,\n      amountTo: tx.expectedDestinationCoinAmount,\n      id: tx.orderId,\n      payinAddress: tx.exchangeAddress.address,\n      payinExtraId: tx.exchangeAddress.tag,\n      exchange,\n    }\n  }\n}\n\nexport const getOrderStatus = async id => {\n  const order = await CoinSwitchAPI.getOrderStatus(id)\n  return order.status\n}","import * as Changelly from './Changelly/index'\nimport * as CoinSwitch from './CoinSwitch/index'\n\nexport const getBestOffer = async (from, to, amount, fix, limits) => {\n  // console.log(`[GET] get best offer with ${from}, ${to}, ${amount} limits`, limits)\n  const offers = await Promise.all([\n    Changelly.getExchangeAmount(from, to, amount, fix, limits[0]),\n    CoinSwitch.getExchangeAmount(from, to, amount, fix, limits[1]),\n  ])\n  \n  let bestOfferIndex = 0\n  let bestOffer = offers[0].amount\n  for(let i=0; i<offers.length; i++) {\n    if(offers[i].amount > bestOffer)\n    bestOfferIndex = i\n    bestOffer = offers[i].amount\n\n  }\n  \n  return { offers, bestOfferIndex }\n}\n\nexport const getLimitsForPair = async (from, to) => {\n  const limits = await Promise.all([\n    Changelly.getMinMaxForPair(from, to),\n    CoinSwitch.getMinMaxForPair(from, to)\n  ])\n  const validFloatLimits = limits.filter(limit => !limit.error && !limit.floatError)\n  const validFixedLimits = limits.filter(limit => !limit.error && !limit.fixError)\n\n  const minAmountFloat = Math.min(...validFloatLimits.map(limit=>Number(limit.minAmountFloat)))\n  const minAmountFixed = Math.min(...validFixedLimits.map(limit=>Number(limit.minAmountFixed)))\n\n  return { limits, minAmountFixed, minAmountFloat };\n}\n\nexport const createTransaction = async (exchange, fix, rateId, from, to, amount, address, extraId = null, refundAddress = null, refundExtraId = null) => {\n  switch (exchange) {\n    case 'Changelly': {\n      return await Changelly.createTransaction(fix, rateId, from, to, amount, address, extraId, refundAddress, refundExtraId)\n    } \n    case 'CoinSwitch': {\n      return await CoinSwitch.createOrder(fix, rateId, from, to, amount, address, extraId, refundAddress, refundExtraId)\n    }\n    default: {\n      throw new Error(`${exchange} transaction not supported yet`);\n    }\n  }\n}\n\nexport const getTransactionStatus = async (exchange, id) => {\n  switch(exchange) {\n    case 'Changelly': {\n      return await Changelly.getTransactionStatus(id)\n    } \n    case 'CoinSwitch': {\n      return await CoinSwitch.getOrderStatus(id)\n    }\n    default: {\n      throw new Error(`${exchange} transaction not supported yet`);\n    }\n  }\n}","import React, { useState } from 'react'\n\nimport { \n  Table, \n  TableHeader, \n  TableRow, \n  TableCell,\n  IconRefresh,  \n  shortenAddress, \n  Button\n} from '@aragon/ui'\n\nimport * as Aggregator from './Exchanges/aggregator'\n\nexport default function LastExchange(transaction) {\n  const [status, setStatus] = useState('unkown')\n\n  const updateExchangeStatus = async () => {\n    const status = await Aggregator.getTransactionStatus(transaction.exchange, transaction.id)\n    setStatus(status)\n  }\n\n\n  return (\n    <>\n      <Table\n        header={\n          <TableRow>\n            <TableHeader title='Last Transaction' />\n          </TableRow>\n        }\n      >\n        <TableRow>\n          <TableCell>\n            Id\n          </TableCell>\n          <TableCell>\n            {transaction.id}\n          </TableCell>\n        </TableRow>\n\n        <TableRow>\n          <TableCell>\n            Transfer\n          </TableCell>\n          <TableCell>\n              {transaction.amountFrom} {transaction.from}\n          </TableCell>\n        </TableRow>\n\n        <TableRow>\n          <TableCell>\n            To\n          </TableCell>\n          <TableCell>\n            {shortenAddress(transaction.payinAddress)}\n          </TableCell>\n        </TableRow>\n\n        <TableRow>\n          <TableCell>\n            You get\n          </TableCell>\n          <TableCell>\n            \n              {transaction.amountTo} {transaction.to}\n          </TableCell>\n        </TableRow>\n\n        <TableRow>\n          <TableCell>\n            Status\n          </TableCell>\n          <TableCell>\n            <Button \n            onClick = {updateExchangeStatus}\n            icon={<IconRefresh/>} \n            label={status}  />\n            {/* <Help hint=\"What are Ethereum addresses made of?\">  Can't find the exchange </Help> */}\n          </TableCell>\n        </TableRow>\n        \n      </Table>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Modal, Button, Info, AddressField, IdentityBadge } from '@aragon/ui'\n\nimport * as Aggregator from './Exchanges/aggregator'\n\nimport { Changelly } from './Exchanges/'\n\nexport default function ExchangeModal(\n  fixed,\n  fixRateId,\n  from,\n  to,\n  amount,\n  address,\n  refundAddress,\n  refundExtraId,\n  exchangeName,\n\n  updateTransaction,\n  transaction\n) {\n  // for Exchange panel\n  const [opened, setOpened] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [errorOpened, setErrorOpened] = useState(false)\n\n  const handleExchange = async () => {\n    if (!address) {\n      setErrorMessage('You need to specify receive address to proceed')\n      setErrorOpened(true)\n    } else {\n      try {\n        const transaction = await Aggregator.createTransaction(\n          exchangeName,\n          fixed,\n          fixRateId,\n          from,\n          to,\n          amount,\n          address,\n          null,\n          refundAddress,\n          refundExtraId\n        )\n\n        setOpened(true)\n        updateTransaction(transaction)\n      } catch (error) {\n        setErrorMessage(error.message)\n        setErrorOpened(true)\n      }\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={handleExchange} label='Exchange' mode='strong' />\n\n      <Modal closeButton={false} width={800} padding={40} visible={opened} onClose={() => setOpened(false)}>\n        <div style={{ padding: '20px', alignItems: 'center' }}>\n          <div style={{ fontSize: 14, paddingLeft: 20 }}> Transaction Created: {transaction.id} </div>\n          <div style={{ fontSize: 24, padding: 20 }}>\n            {' '}\n            Please send {transaction.amountFrom} {transaction.from.toUpperCase()} to:{' '}\n          </div>\n          <div style={{ padding: 20 }}>\n            <AddressField address={transaction.payinAddress} />\n          </div>\n\n          <div style={{ fontSize: 20, padding: 20 }}>\n            We will send {transaction.amountTo} {transaction.to} to <IdentityBadge entity={transaction.payoutAddress} />{' '}\n          </div>\n        </div>\n\n        <div style={{ fontSize: 16, padding: '20px', display: 'flex', alignContent: 'center' }}></div>\n      </Modal>\n\n      {/* Error Modal */}\n      <Modal closeButton={false} width={600} padding={30} visible={errorOpened} onClose={() => setErrorOpened(false)}>\n        <Info title='Opps...' mode='error'>\n          {errorMessage}\n        </Info>\n      </Modal>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport LastExchangeBox from './LastExchangeBox'\nimport ExchangeModal from './ExchangeModal'\n\nimport AwesomeDebouncePromise from 'awesome-debounce-promise'\nimport { useAsync } from 'react-async-hook'\nimport useConstant from 'use-constant'\n\nimport {\n  RadioList,\n  LoadingRing,\n  ButtonBase,\n  Box,\n  Split,\n  IconArrowDown,\n  // IconArrowRight,\n  IconLock,\n  IconUnlock,\n  TextInput,\n  Field,\n  _AutoCompleteSelected as AutoCompleteSelected,\n  // Button,\n} from '@aragon/ui'\n\nimport { Changelly } from './Exchanges'\n\nimport * as Aggregator from './Exchanges/aggregator'\n\nconst getAggregateBestOffer = async (_from, _to, _amount, _fix, limits) => {\n  // console.log(`starting to get offer`)\n  return await Aggregator.getBestOffer(_from, _to, _amount, _fix, limits)\n}\n\nconst useSearchExchangeAmount = () => {\n  // Handle the input text state\n  const [from, setFrom] = useState('btc')\n  const [to, setTo] = useState('eth')\n  const [amount, setAmount] = useState(0)\n  const [fixed, setUseFix] = useState(false)\n  // const [currentOffer, setCurrentOffer] = useState(null)\n  const [selectedOfferIndex, setOfferIndex] = useState(0);\n  const [offers, setOffers] = useState([])\n  const [limits, setLimits] = useState([])\n\n  // Debounce the original search async function\n  const debouncedGetOffersOnce = useConstant(() => AwesomeDebouncePromise(getAggregateBestOffer, 1000))\n\n  const debouncedGetOffers = useAsync(\n    async () => {\n      if (from !== to && amount !== 0) {\n        const { offers, bestOfferIndex } = await debouncedGetOffersOnce(from, to, amount, fixed, limits)\n        setOffers(offers)\n        setOfferIndex(bestOfferIndex)\n\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    // [amount],\n    [from, to, amount, fixed]\n  )\n\n  // Return everything needed for the hook consumer\n  return {\n    debouncedGetOffers,\n\n    from,\n    to,\n    amount,\n    fixed,\n    offers,\n    limits,\n    selectedOfferIndex,\n\n    setUseFix,\n    setFrom,\n    setTo,\n    setAmount,\n    setOffers,\n    setLimits,\n    setOfferIndex,\n    \n  }\n}\n\nexport default function Main() {\n  const [currencies, updateCurrencies] = useState([])\n  // const [address, setAddress] = useState('')\n  // const [refundAddress, setRefundAddress] = useState('')\n  const [address, setAddress] = useState('0xbAF99eD5b5663329FA417953007AFCC60f06F781')\n  const [refundAddress, setRefundAddress] = useState('bc1qjl8uwezzlech723lpnyuza0h2cdkvxvh54v3dn')\n\n  const {\n    from,\n    setFrom,\n    to,\n    setTo,\n    amount,\n    setAmount,\n    selectedOfferIndex,\n    \n    debouncedGetOffers,\n    // setCurrentOffer,\n    offers,\n    fixed,\n    setUseFix,\n    setLimits,\n    setOfferIndex\n  } = useSearchExchangeAmount()\n\n  const [fresh, setFresh] = useState(true)\n\n  const [minAmountFloat, setMinAmountFloat] = useState(0)\n  const [minAmountFixed, setMinAmountFixed] = useState(0)\n\n  // For last Exchange Info Box, only update with\n  const [transaction, updateTransaction] = useState({\n    from: '',\n    to: '',\n    amountFrom: 0,\n    amountTo: 0,\n    payinAddress: '',\n    payoutAddress: '',\n    payinExtraId: '',\n    id: '',\n    exchange: 'unkown',\n  })\n\n  // Auto Complete search\n  const [searchTerm, setSearchTerm] = useState('')\n  const [toSearchTerm, setToSearchTerm] = useState('')\n\n  const [selectedFrom, setSelectedFrom] = useState({ symbol: 'btc', label: 'Bitcoin (btc)' })\n  const [selectedTo, setSelectedTo] = useState({ symbol: 'eth', label: 'Ethereum (eth)' })\n  \n\n  let handleFromCoinChange = async label => {\n    setSearchTerm(label)\n\n    const fromObj = currencies.find(coin => coin.label === label)\n    setSelectedFrom(fromObj)\n\n    const _from = fromObj.symbol\n    \n    await updateLimitAmounts(_from, to)\n    setFrom(_from)\n    // debouncedGetOffers.execute(_from, to, amount, fixed, limits)\n  }\n\n  let handleToCoinChange = async label => {\n    setToSearchTerm(label)\n    const toObj = currencies.find(coin => coin.label === label)\n    setSelectedTo(toObj)\n    const _to = toObj.symbol\n    \n    await updateLimitAmounts(from, _to)\n    setTo(_to)\n    // debouncedGetOffers.execute(from, _to, amount, fixed)\n  }\n\n  let handleAmountChange = async event => {\n    const _amount = event.target.value\n    setAmount(_amount)\n  }\n\n  const handleAddressChange = async event => {\n    setAddress(event.target.value)\n  }\n\n  const handleRefundAddressChange = async event => {\n    setRefundAddress(event.target.value)\n  }\n\n  let updateLimitAmounts = async (_from, _to) => {\n    const {limits, minAmountFixed, minAmountFloat} = await Aggregator.getLimitsForPair(_from, _to)\n    setLimits(limits)\n    setMinAmountFloat(minAmountFloat)\n    setMinAmountFixed(minAmountFixed)\n  }\n\n  if (fresh) {\n    setFresh(false)\n    Changelly.getCurrenciesSymbolAndLabel().then(_currencies => {\n      updateCurrencies(_currencies)\n      updateLimitAmounts(from, to)\n    })\n  }\n\n  return (\n    <Split\n      primary={\n        <div>\n          <div\n            style={{ fontSize: 16, paddingBottom: 8, paddingLeft: '21px', paddingRight: 0, textAlign: 'left', color: '#637381' }}\n          >\n            You Send\n          </div>\n          <Box>\n            <Split\n              primary={\n                <>\n                  <Field label={`Amount (Min:${fixed ? minAmountFixed : minAmountFloat})`} required>\n                    <TextInput\n                      type='number'\n                      value={amount}\n                      onChange={event => {\n                        handleAmountChange(event)\n                      }}\n                    ></TextInput>\n                  </Field>\n\n                  <Field label='Refund Address'>\n                    <TextInput\n                      required\n                      wide='true'\n                      onChange={handleRefundAddressChange}\n                      type='text'\n                      value={refundAddress}\n                    ></TextInput>\n                  </Field>\n                </>\n              }\n              secondary={\n                <>\n                  <Field label='from'>\n                    <AutoCompleteSelected\n                      items={currencies\n                        .filter(coin => {\n                          if (searchTerm) return coin.label.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\n                          else return true\n                        })\n                        .map(coin => coin.label)}\n                      onChange={setSearchTerm}\n                      value={searchTerm}\n                      onSelect={handleFromCoinChange}\n                      renderSelected={x => <> {x.label} </>}\n                      selected={selectedFrom}\n                      onSelectedClick={() => {\n                        setSelectedFrom(null)\n                        setSearchTerm('')\n                      }}\n                      placeholder='Search To Show More'\n                    />\n                  </Field>\n                </>\n              }\n            />\n          </Box>\n\n          <div style={{ padding: '15px', display: 'flex', justifyContent: 'center' }}>\n            {/* <img style={{ width: 25, height: 25 }} alt={`from`} src={`https://cryptoicons.org/api/icon/${from}/25`} /> */}\n            <span style={{ paddingLeft: 15, paddingRight: 15 }}>\n              {' '}\n              <IconArrowDown />{' '}\n            </span>\n\n            {/* <img style={{ width: 25, height: 25 }} alt={`${to}`} src={`https://cryptoicons.org/api/icon/${to}/25`} /> */}\n            <ButtonBase\n              style={{ paddingLeft: 25 }}\n              onClick={() => {\n                setUseFix(!fixed)\n              }}\n            >\n              {fixed ? <IconLock /> : <IconUnlock />}\n            </ButtonBase>\n          </div>\n\n          <Box>\n            <Split\n              primary={\n                <div>\n                  <Field label='Offers'>\n                    {debouncedGetOffers.loading ? (\n                      <LoadingRing />\n                    ) : (\n                      <RadioList\n                        onChange={(index) => {\n                          setOfferIndex(index)\n                        }}\n                        selected={selectedOfferIndex}\n                        items={\n                          offers.length > 0\n                            ? offers.map(offer => {\n                                return offer.error\n                                  ? {\n                                      title: `${offer.amount} ${to.toUpperCase()}`,\n                                      description: `${offer.exchange}:  ${offer.error}`,\n                                    }\n                                  : {\n                                      title: `${offer.amount} ${to.toUpperCase()}`,\n                                      description: `${offer.exchange}`,\n                                    }\n                              })\n                            : [{ title:'', description: `No ${fixed ? 'fix rate' : 'float rate'} offers ` }]\n                        }\n                      />\n                    )}\n                  </Field>\n\n                  <Field label='Withdraw Address'>\n                    <TextInput required wide='true' onChange={handleAddressChange} type='text' value={address}></TextInput>\n                  </Field>\n                </div>\n              }\n              secondary={\n                <Field label='To'>\n                  <AutoCompleteSelected\n                    items={currencies\n                      .filter(coin => {\n                        if (toSearchTerm) return coin.label.toLowerCase().indexOf(toSearchTerm.toLowerCase()) > -1\n                        else return true\n                      })\n                      .map(coin => coin.label)}\n                    onChange={setToSearchTerm}\n                    value={toSearchTerm}\n                    onSelect={handleToCoinChange}\n                    renderSelected={x => <>{x.label}</>}\n                    selected={selectedTo}\n                    onSelectedClick={() => {\n                      setSelectedTo(null)\n                      setToSearchTerm('')\n                    }}\n                    placeholder='Ethereum'\n                  />\n                </Field>\n              }\n            ></Split>\n          </Box>\n          <div style={{ padding: '20px', display: 'flex', justifyContent: 'center' }}>\n            {ExchangeModal(\n              fixed,\n              offers.length !== 0 ? offers[selectedOfferIndex].id : '', // currentOffer ? currentOffer.id : '',\n              from,\n              to,\n              amount,\n              address,\n              refundAddress,\n              null, // refundExtraId\n              offers.length !== 0 ? offers[selectedOfferIndex].exchange : '', // currentOffer ? currentOffer.exchange : '',\n\n              updateTransaction,\n              transaction\n            )}\n          </div>\n        </div>\n      }\n      secondary={LastExchangeBox(transaction)}\n    />\n  )\n}\n","import React, { useState } from 'react'\n\nimport Exchange from './Componenets/Main'\nimport { Main, Header, Button, IconPlus, SidePanel, Box } from '@aragon/ui'\nimport AragonUILogog from './aragonui-logo.png'\nimport ChangellyLogo from './changelly-logo.png'\nimport './App.css'\n\nfunction App() {\n  const [sidePanelOpened, setSidePanelOpened] = useState(false)\n\n  return (\n    <Main>\n      <Header\n        primary={<></>}\n        secondary={\n          <Button\n            // mode='strong'\n            label='Learn More'\n            icon={<IconPlus />}\n            onClick={() => {\n              setSidePanelOpened(true)\n            }}\n          />\n        }\n      />\n\n      <Exchange />\n\n      <SidePanel title='About BestSwap' opened={sidePanelOpened} onClose={() => setSidePanelOpened(false)}>\n        <div style={{ padding: 20, fontSize: 15 }}> Powered By </div>\n        <Box>\n          <img width={300} src={AragonUILogog} alt='aragon-ui'></img>\n        </Box>\n        <Box>\n          <img width={300} src={ChangellyLogo} alt='aragon-ui'></img>\n        </Box>\n      </SidePanel>\n    </Main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/aragonui-logo.c72415d5.png\";","module.exports = __webpack_public_path__ + \"static/media/changelly-logo.1cd0e575.png\";"],"sourceRoot":""}